@startuml forgot_password_sequence_diagram

actor User
participant "Router" as Router
participant LoginSignupController
participant LoginSignupView
participant ForgotPasswordEmailModalController
participant ForgotPasswordEmailModalView
participant ForgotPasswordController
participant ForgotPasswordView
participant Api

User -> Router: navigate("/")
activate Router
Router -> LoginSignupController: render()
activate LoginSignupController
LoginSignupController -> LoginSignupView: render()
activate LoginSignupView
User -> LoginSignupView: onClick()
LoginSignupView -> LoginSignupController: handleOpenModal()
LoginSignupController -> LoginSignupView: setOpenModal(!openModal)
LoginSignupView -> ForgotPasswordEmailModalController: render()
activate ForgotPasswordEmailModalController
ForgotPasswordEmailModalController -> ForgotPasswordEmailModalView: render()
activate ForgotPasswordEmailModalView
User -> ForgotPasswordEmailModalView: onChange()
ForgotPasswordEmailModalView -> ForgotPasswordEmailModalController: handleChange(e)
ForgotPasswordEmailModalController -> ForgotPasswordEmailModalView: setEmail(email)

User -> ForgotPasswordEmailModalView: onClick()
ForgotPasswordEmailModalView -> ForgotPasswordEmailModalController: sendEmailConfirmation()
ForgotPasswordEmailModalController -> Api: axios.put("/forget-password")
activate Api
Api --> ForgotPasswordEmailModalController: response.data
deactivate Api

alt Email sent successfully
    ForgotPasswordEmailModalController -> User: alert("Email sent successfully")
    ForgotPasswordEmailModalController -> Router: navigate("/forgot-password")
    Router --> ForgotPasswordController: render()
    activate ForgotPasswordController
    ForgotPasswordController -> ForgotPasswordView: render()
    activate ForgotPasswordView

    User -> ForgotPasswordView: onChange()
    ForgotPasswordView -> ForgotPasswordController: handleChange(e)
    ForgotPasswordController -> ForgotPasswordView: setForgotPassword(updatedForgotPassword), setMatchPassword(matchPassword)

    User -> ForgotPasswordView: onClick()
    ForgotPasswordView -> ForgotPasswordController: resetPassword()
    ForgotPasswordController -> Api: axios.put("forget-password/verify")
    activate Api
    Api --> ForgotPasswordController: response.data
    deactivate Api

    alt Password reset successful
        ForgotPasswordController -> User: alert("Password reset successfully")
        ForgotPasswordController -> Router: navigate("/")
        Router -> LoginSignupController: render()
        LoginSignupController -> LoginSignupView: render()
    else Password reset failed
        ForgotPasswordController -> ForgotPasswordView: setHasError(true)
    end

    ForgotPasswordController -> ForgotPasswordView: render()
    deactivate ForgotPasswordController
    deactivate ForgotPasswordView
else Email sending failed
    ForgotPasswordEmailModalController -> User: alert("There was an error sending the email. Please try again.")
    ForgotPasswordEmailModalController -> ForgotPasswordEmailModalView: render()
    deactivate ForgotPasswordEmailModalController
    deactivate ForgotPasswordEmailModalView
end



@enduml
